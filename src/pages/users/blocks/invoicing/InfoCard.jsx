import { useEffect, useState } from "react";
import { KeenIcon } from "../../../../components";
// import arrowUp from "../../../../assets/icons/arrow-up.svg";
// import arrowDown from "../../../../assets/icons/arrow-down-red.svg";

export const InfoCard = ({ title, iconName, iconColor, value, trend }) => {
  const [transactionStats, setTransactionStats] = useState({
    totalTransactions: 0,
    successfulTransactions: 0,
    failedTransactions: 0,
    totalTrend: { value: "0%", direction: true },
    successfulTrend: { value: "0%", direction: true },
    failedTrend: { value: "0%", direction: true },
  });

  useEffect(() => {
    // Моковые данные для статистики транзакций
    const mockTransactionStats = {
      totalTransactions: 2265,
      successfulTransactions: 142,
      failedTransactions: 14,
      totalTrend: {
        value: "+12.5%",
        direction: true,
      },
      successfulTrend: {
        value: "+8.3%",
        direction: true,
      },
      failedTrend: {
        value: "-2.1%",
        direction: false,
      },
    };

    setTransactionStats(mockTransactionStats);
  }, []);

  const trendIndicator = (trend) => {
    const isPositive = trend.trend;
    // const arrowIcon = isPositive ? arrowUp : arrowDown;
    const colorBack = isPositive ? "bg-[#EAFFF1]" : "bg-[#FFEEF3]";
    const colorText = isPositive ? "text-[#17C653]" : "text-[#F8285A]";
    return (
      <div
        className={`flex gap-[3px] p-[7px] ${colorBack} rounded-md items-center w-[60px] justify-center`}
      >
        {/* <img className="w-[10px]" src={arrowIcon} alt="arrowup" /> */}
        <svg
          width="11"
          height="10"
          viewBox="0 0 11 10"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          className="min-w-[11px] min-h-[10px]"
        >
          <path
            opacity="0.3"
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M5.50253 9.47198C5.25411 9.47198 5.05273 9.2706 5.05273 9.02219L5.05273 1.21542C5.05273 0.967005 5.25411 0.765625 5.50253 0.765625C5.75095 0.765625 5.95233 0.967006 5.95233 1.21542L5.95233 9.02219C5.95233 9.2706 5.75095 9.47198 5.50253 9.47198Z"
            fill="#17C653"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M9.29021 4.77073C9.11455 4.94638 8.82976 4.94638 8.6541 4.77073L5.50248 1.61911L2.35086 4.77073C2.1752 4.94638 1.89041 4.94638 1.71475 4.77073C1.53909 4.59507 1.53909 4.31028 1.71475 4.13462L5.18442 0.664945C5.36008 0.489289 5.64488 0.489289 5.82053 0.664945L9.29021 4.13462C9.46586 4.31028 9.46586 4.59507 9.29021 4.77073Z"
            fill="#17C653"
          />
        </svg>
        <span className={`${colorText} text-xs font-semibold`}>
          {trend.value}
        </span>
      </div>
    );
  };

  return (
    <div className="flex gap-6 w-1/3 bg-white rounded-[12px] border-[1.5px] border-[#F1F1F4] items-center justify-center py-4">
      <div>
        <KeenIcon icon={iconName} className={`text-[29.33px] ${iconColor}`} />
      </div>
      <div className="flex flex-col justify-between items-start gap-2">
        <span className="text-[14px] text-[#78829D]">{title}</span>
        <div className="flex flex-col gap-1 w-[150px]">
          <div className="flex justify-between items-center">
            <p className="text-[#071437] text-[18px] font-semibold">{value}</p>
            <svg
              width="25"
              height="24"
              viewBox="0 0 25 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className="mr-2 min-w-[24px] min-h-[24px]"
            >
              <path
                opacity="0.6"
                d="M21.8284 1C21.6085 1.00291 21.3983 1.09503 21.2428 1.2567C21.0872 1.41837 20.9986 1.6368 20.9958 1.86542V4.94497C19.7213 3.56048 18.1092 2.56145 16.3314 2.0544C14.5535 1.54736 12.6766 1.5513 10.9008 2.06581C9.12495 2.58032 7.51674 3.58611 6.24763 4.97594C4.97852 6.36578 4.09609 8.08754 3.69443 9.95766C3.66894 10.0684 3.66501 10.1834 3.68288 10.2957C3.70075 10.4081 3.74006 10.5156 3.7985 10.612C3.85693 10.7083 3.93331 10.7915 4.02315 10.8567C4.11299 10.9219 4.21446 10.9678 4.32161 10.9917C4.38605 11.0028 4.45181 11.0028 4.51625 10.9917C4.70494 10.9914 4.88796 10.9245 5.03531 10.802C5.18265 10.6795 5.28559 10.5086 5.32725 10.3173C5.66481 8.74497 6.4091 7.29831 7.4798 6.13345C8.5505 4.9686 9.90694 4.1298 11.4027 3.70758C12.8985 3.28536 14.4768 3.29575 15.9674 3.73764C17.4579 4.17953 18.804 5.03614 19.8604 6.215H19.7353C19.5116 6.215 19.2971 6.30736 19.1389 6.47177C18.9808 6.63617 18.8919 6.85915 18.8919 7.09166C18.8919 7.32416 18.9808 7.54714 19.1389 7.71155C19.2971 7.87596 19.5116 7.96832 19.7353 7.96832H21.8284C22.0521 7.96832 22.2667 7.87596 22.4248 7.71155C22.583 7.54714 22.6719 7.32416 22.6719 7.09166V1.86542C22.669 1.63487 22.5789 1.41476 22.421 1.25278C22.2632 1.0908 22.0503 0.999981 21.8284 1Z"
                fill="#99A1B7"
              />
              <path
                opacity="0.6"
                d="M21.9764 13.0156C21.754 12.9722 21.524 13.0203 21.336 13.1495C21.1479 13.2788 21.0171 13.4787 20.9718 13.7061C20.6479 15.3187 19.8951 16.808 18.7966 18.009C17.6982 19.21 16.2971 20.0758 14.7483 20.5106C13.1996 20.9454 11.5637 20.9322 10.0218 20.4725C8.47995 20.0128 7.09225 19.1245 6.01238 17.9059H6.32442C6.44494 17.92 6.567 17.9078 6.6826 17.8701C6.79821 17.8324 6.90474 17.7701 6.99523 17.6873C7.08572 17.6045 7.15812 17.503 7.2077 17.3895C7.25727 17.2759 7.2829 17.153 7.2829 17.0286C7.2829 16.9042 7.25727 16.7812 7.2077 16.6677C7.15812 16.5542 7.08572 16.4527 6.99523 16.3699C6.90474 16.2871 6.79821 16.2248 6.6826 16.1871C6.567 16.1494 6.44494 16.1372 6.32442 16.1513H4.53301C4.41992 16.1513 4.30794 16.1741 4.20346 16.2185C4.09899 16.2629 4.00406 16.3279 3.92409 16.4099C3.84413 16.4919 3.7807 16.5892 3.73742 16.6963C3.69415 16.8035 3.67188 16.9183 3.67188 17.0342V22.117C3.67188 22.3512 3.7626 22.5758 3.92409 22.7414C4.08559 22.907 4.30462 23 4.53301 23C4.76139 23 4.98042 22.907 5.14192 22.7414C5.30341 22.5758 5.39414 22.3512 5.39414 22.117V19.7511C6.74716 21.0327 8.40758 21.9234 10.206 22.332C12.0043 22.7407 13.8763 22.6528 15.6307 22.0774C17.3851 21.5019 18.9592 20.4594 20.1924 19.0564C21.4255 17.6533 22.2735 15.9399 22.6499 14.091C22.6758 13.975 22.6788 13.8548 22.6589 13.7375C22.6389 13.6203 22.5963 13.5083 22.5336 13.4081C22.4709 13.308 22.3893 13.2216 22.2936 13.1542C22.1979 13.0868 22.0901 13.0397 21.9764 13.0156Z"
                fill="#99A1B7"
              />
              <path
                d="M14.2732 13.3008H8.43457C8.01065 13.3008 7.66699 12.9571 7.66699 12.5332C7.66699 12.1093 8.01065 11.7656 8.43457 11.7656H14.2482C14.8149 11.7656 15.2837 11.6777 15.6545 11.502C16.0253 11.3223 16.3003 11.0762 16.4795 10.7637C16.6587 10.4473 16.7482 10.084 16.7482 9.67383C16.7482 9.26758 16.6587 8.9043 16.4795 8.58398C16.3003 8.26367 16.0274 8.01172 15.6607 7.82812C15.2941 7.64062 14.8316 7.54688 14.2732 7.54688H11.5482V17.0375C11.5482 17.5691 11.1173 18 10.5857 18C10.0542 18 9.62324 17.5691 9.62324 17.0375V7C9.62324 6.44772 10.071 6 10.6232 6H14.2732C15.2441 6 16.0545 6.16406 16.7045 6.49219C17.3587 6.82031 17.8482 7.26172 18.1732 7.81641C18.5024 8.37109 18.667 8.98828 18.667 9.66797C18.667 10.3555 18.5003 10.9746 18.167 11.5254C17.8378 12.0723 17.3462 12.5059 16.692 12.8262C16.042 13.1426 15.2357 13.3008 14.2732 13.3008ZM13.5965 14.3086C14.022 14.3086 14.367 14.6536 14.367 15.0791C14.367 15.5046 14.022 15.8496 13.5965 15.8496H8.4375C8.01196 15.8496 7.66699 15.5046 7.66699 15.0791C7.66699 14.6536 8.01196 14.3086 8.4375 14.3086H13.5965Z"
                fill="#99A1B7"
              />
            </svg>
            {trendIndicator(trend)}
          </div>
          <div className="flex justify-between items-center">
            <p className="text-[#78829D] text-[18px] font-semibold">
              {trend.value}
            </p>
            {trendIndicator(trend)}
          </div>
        </div>
      </div>
    </div>
  );
};
