import { matchPath } from "react-router";

const useMenuBreadcrumbs = (pathname, items) => {
  pathname = pathname.trim();

  const findParents = (items) => {
    if (!items) return [];
    for (let i = 0; i < items.length; i++) {
      const item = items[i];
      if (item.path && matchPath({ path: item.path, end: false }, pathname)) {
        return [
          {
            title: item.title,
            path: item.path,
            active: true,
          },
        ];
      } else if (item.children) {
        const parents = findParents(item.children);
        if (parents.length > 0) {
          return [item, ...parents];
        }
      }
    }
    return [];
  };

  const breadcrumbs = findParents(items);

  // üëá –ö–∞—Å—Ç–æ–º–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –∫–æ–Ω—Ñ–∏–≥–µ –º–µ–Ω—é
  const customRoutes = [
    {
      match: "/tasks/create-update-tasks/:id?",
      crumbs: [
        { title: "–ó–∞–¥–∞–Ω–∏—è", path: "/tasks" },
        { title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–¥–∞–Ω–∏—è", path: pathname, active: true },
      ],
    },
    {
      match: "/faq/create-update-question/:id?",
      crumbs: [
        { title: "FAQ", path: "/faq" },
        {
          title: "–°–æ–∑–¥–∞–Ω–∏–µ / —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞",
          path: pathname,
          active: true,
        },
      ],
    },
    {
      match: "/documentation/create-update-documentation/:id?",
      crumbs: [
        { title: "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", path: "/documentation" },
        {
          title: "–°–æ–∑–¥–∞–Ω–∏–µ / —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
          path: pathname,
          active: true,
        },
      ],
    },
    {
      match: "/mailing/create-update-mailing/:id?",
      crumbs: [
        { title: "–†–∞—Å—Å—ã–ª–∫–∏", path: "/mailing" },
        {
          title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫",
          path: pathname,
          active: true,
        },
      ],
    },
    {
      match: "/giveaways/settings-giveaway/:id?",
      crumbs: [
        { title: "–ö–æ–Ω–∫—É—Ä—Å—ã", path: "/giveaways" },
        {
          title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω–∫—É—Ä—Å–∞",
          path: pathname,
          active: true,
        },
      ],
    },
    {
      match: "/giveaways/participants/:id?",
      crumbs: (() => {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º id –∏–∑ pathname
        const match = pathname.match(/\/giveaways\/participants\/(\d+)/);
        const id = match ? match[1] : "";
        return [
          { title: "–ö–æ–Ω–∫—É—Ä—Å—ã", path: "/giveaways" },
          {
            title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω–∫—É—Ä—Å–∞",
            path: `/giveaways/settings-giveaway/${id}`,
          },
          {
            title: "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
            path: pathname,
            active: true,
          },
        ];
      })(),
    },
  ];

  for (const route of customRoutes) {
    if (matchPath({ path: route.match, end: true }, pathname)) {
      return route.crumbs;
    }
  }

  return breadcrumbs;
};

export { useMenuBreadcrumbs };
